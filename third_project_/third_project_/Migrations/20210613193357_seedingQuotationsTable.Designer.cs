// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using third_project_.Data;

namespace third_project_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210613193357_seedingQuotationsTable")]
    partial class seedingQuotationsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("third_project_.Models.QuotationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Quotations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = " There is nothing permanent except change.",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Message = " When you reach the end of your rope, tie a knot in it and hang on.",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Message = " Learning never exhausts the mind.",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Message = " All that we see or seem is but a dream within a dream.",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 5,
                            Message = " No act of kindness, no matter how small, is ever wasted.",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 6,
                            Message = " It is far better to be alone, than to be in bad company.",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 7,
                            Message = " If you cannot do great things, do small things in a great way.",
                            StudentId = 5
                        },
                        new
                        {
                            Id = 8,
                            Message = " Keep your face always toward the sunshine - and shadows will fall behind you.",
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("third_project_.Models.StudentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afra "
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yara "
                        },
                        new
                        {
                            Id = 3,
                            Name = "maram "
                        },
                        new
                        {
                            Id = 4,
                            Name = "manar "
                        },
                        new
                        {
                            Id = 5,
                            Name = "duaa "
                        });
                });

            modelBuilder.Entity("third_project_.Models.QuotationModel", b =>
                {
                    b.HasOne("third_project_.Models.StudentModel", "Student")
                        .WithMany("Quotations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("third_project_.Models.StudentModel", b =>
                {
                    b.Navigation("Quotations");
                });
#pragma warning restore 612, 618
        }
    }
}
